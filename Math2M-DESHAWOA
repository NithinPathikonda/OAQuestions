
Problem Statement:
https://www.desiqna.in/17097/de-shaw-oa-sde-coding-questions-2024-set-69

************************************* O(n^2) *************************************

for(int i=0;i<n;i++)
{
	for(int j=i+1;j<n;j++)
	{
		if(abs(arr[i]-arr[j])+abs(arr[i]+arr[j]) ==target)
		{
			c++;
		}
	}
}
print(c);



************************************* O(n) *************************************

// if arr[i]<arr[j] then arr[j]=target/2 and if arr[i]>arr[j] arr[i]=target/2 -> so whenever you encounter target/2 we have 2 possiblities 
// if target is 10 then arr is 2 1 3 5' 2 6 5' 2 -1

int tcnt=0,ltcnt=0;
if(target%2!=0)//(what if we have target odd that mean if its 11 6.5 is obvi not found in the integer numbers array)
{
	return 0;
}
for(int i=0;i<n;i++)
{
	if(arr[i]==target/2)
	{
		tcnt++;
	}
	else if(arr[i]<target/2) 
	{
		ltcnt++;
	}
}
ans = ltcnt*tcnt + (tcnt*(tcnt-1))/2;//(adding this because what if we have the same numbers combination that also satisfy the given equation)
return ans;
